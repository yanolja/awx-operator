---
- name: Check if there are any super users defined.
  k8s_exec:
    namespace: "{{ meta.namespace }}"
    pod: "{{ tower_pod_name }}"
    container: "{{ meta.name }}-task"
    command: >-
      bash -c "echo 'from django.contrib.auth.models import User;
      nsu = User.objects.filter(is_superuser=True, username='{{ admin_user }}').count();
      exit(0 if nsu > 0 else 1)'
      | awx-manage shell"
  ignore_errors: true
  register: users_result
  changed_when: users_result.return_code > 0

- name: Update super user password via Django if it does exist (same password is a noop)
  k8s_exec:
    namespace: "{{ meta.namespace }}"
    pod: "{{ tower_pod_name }}"
    container: "{{ meta.name }}-task"
    command: >-
      bash -c "awx-manage update_password --username '{{ admin_user }}' --password '{{ admin_password }}'"
  register: update_pw_result
  changed_when: users_result.stdout == 'Password not updated'
  when: users_result.return_code == 0

- name: Create super user via Django if it doesn't exist.
  k8s_exec:
    namespace: "{{ meta.namespace }}"
    pod: "{{ tower_pod_name }}"
    container: "{{ meta.name }}-task"
    command: >-
      bash -c "echo \"from django.contrib.auth.models import User;
      User.objects.create_superuser('{{ admin_user }}', '{{ admin_email }}', '{{ admin_password }}')\"
      | awx-manage shell"
  when: users_result.return_code > 0

- name: Create preload data if necessary.  # noqa 305
  k8s_exec:
    namespace: "{{ meta.namespace }}"
    pod: "{{ tower_pod_name }}"
    container: "{{ meta.name }}-task"
    command: >-
      bash -c "awx-manage create_preload_data"
  register: cdo
  changed_when: "'added' in cdo.stdout"
  when: create_preload_data | bool
